# Note: You should disable gzip for SSL traffic.
# See: https://bugs.debian.org/773332

# Read up on ssl_ciphers to ensure a secure configuration.
# See: https://bugs.debian.org/765782

server {
    # https://nginx.org/en/docs/http/ngx_http_core_module.html#listen
    listen 80;
    #listen 443 ssl http2;
    #listen 443 http3;
    listen [::]:80;
    #listen [::]:443 ssl http2;
    #listen [::]:443 http3;

    # https://nginx.org/en/docs/http/ngx_http_core_module.html#root
    root /usr/local/src/app/public;

    # https://nginx.org/en/docs/http/ngx_http_index_module.html#index
    index index.php;

    # https://nginx.org/en/docs/http/ngx_http_core_module.html#server_name
    server_name _;

    # Onion services
    #add_header Onion-Location http://SITE_URL.onion$request_uri;

    include snippets/security.conf;

    # Limit to selected http methods
    add_header Allow "HEAD, OPTIONS, GET, POST, PUT, PATCH, DELETE" always;
    if ($request_method !~ ^(HEAD|OPTIONS|GET|POST|PUT|PATCH|DELETE)$) {
        return 405;
    }

    # https://www.nginx.com/resources/wiki/start/topics/recipes/symfony/#secure-symfony-4-x

    location / {
        # First attempt to serve request as file, then as directory, then fall
        # back to index.php.
        # Don't use "$uri/" because if a folder matches, the OPTIONS method,
        # will fail with 405 (https://github.com/serversideup/docker-php/issues/89)
        try_files $uri /index.php$is_args$args;
    }

    # additional config
    include snippets/general.conf;

    # Pass PHP scripts to FastCGI server
    location ~ ^/index\.php$ {
        include snippets/fastcgi-php.conf;

        # With php-fpm (or other unix sockets):
        fastcgi_pass unix:/run/php/php-fpm.sock;
        # https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_split_path_info
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;

        # When you are using symlinks to link the document root to the
        # current version of your application, you should pass the real
        # application path instead of the path to the symlink to PHP
        # FPM.
        # Otherwise, PHP's OPcache may not properly detect changes to
        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
        # for more information).
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;

        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/index.php/some-path
        # Remove the internal directive to allow URIs like this
        # https://nginx.org/en/docs/http/ngx_http_core_module.html#internal
        internal;
    }

    # return 404 for all other php files not matching the front controller
    # this prevents access to other php files you don't want to be accessible.
    location ~ \.php$ {
        return 404;
    }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    location ~ /\.ht {
        deny all;
    }
}
